{"version":3,"sources":["assets/imgs/contact/Contact-graphic-left.svg","assets/imgs/contact/Contact-graphic-right.svg","scripts/email.js","views/Contact/Form.js","views/Contact/index.js"],"names":["module","exports","sentEmail","name","email","linkedin","project","axios","get","params","then","res","console","log","InputField","React","forwardRef","props","ref","splitFormProps","field","fieldOptions","rest","useField","meta","error","isTouched","isValidating","message","getInputProps","className","type","onSubmitted","defaultValues","useMemo","linkedIn","useForm","onSubmit","values","instance","a","sendEmail","setTimeout","Form","pushFieldValue","removeFieldValue","isSubmitting","isSubmitted","canSubmit","useEffect","validate","value","placeholder","validateEmail","_","trim","disabled","GoToArrow","text","test","String","toLowerCase","useState","isSent","setIsSent","isWhite","Header","onClick","history","push","scrollTop","src","LeftBg","RightBg","Footer"],"mappings":"iIAAAA,EAAOC,QAAU,IAA0B,kD,oBCA3CD,EAAOC,QAAU,IAA0B,mD,gLCiB5BC,EAdG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1C,OAAOC,IAAMC,IAAI,gEAAiE,CAC9EC,OAAQ,CACNN,OACAC,QACAC,WACAC,aAGHI,MAAK,SAAAC,GACJC,QAAQC,IAAI,UAAWF,O,yjBCJ7B,IAAMG,EAAaC,IAAMC,YAAW,SAACC,EAAOC,GAAQ,MAEdC,YAAeF,GAFD,mBAE3CG,EAF2C,KAEpCC,EAFoC,KAEtBC,EAFsB,OAS9CC,YAASH,EAAOC,GAT8B,IAOhDG,KAAQC,EAPwC,EAOxCA,MAAOC,EAPiC,EAOjCA,UAAWC,EAPsB,EAOtBA,aAAcC,EAPQ,EAORA,QACxCC,EARgD,EAQhDA,cAIF,OACE,yBAAKC,UAAU,cAEG,aAAdR,EAAKS,KACH,6BAAcF,EAAc,EAAD,CAAGX,OAAQI,KAEtC,0BAAWO,EAAc,EAAD,CAAGX,OAAQI,KAQtCK,EACC,wBAAIG,UAAU,QAAd,iBACEJ,GAAaD,EACf,4BAAQK,UAAU,QAAQL,GACxBG,EACF,2BAAOE,UAAU,QAAQF,GACvB,SAKK,cAER,IAAD,IADJI,mBACI,MADU,aACV,EACEC,EAAgBlB,IAAMmB,SAC1B,iBAAO,CACL/B,KAAM,GACNC,MAAO,GACP+B,SAAU,GACV7B,QAAS,MAEX,IARE,EAgBA8B,YAAQ,CACVH,gBAOAI,SAAS,WAAD,4BAAE,WAAOC,EAAQC,GAAf,SAAAC,EAAA,sEACFC,EAAUH,GADR,OAERI,YAAW,WACTV,MACC,KAJK,2CAAF,qDAAC,KAbTW,EAXE,EAWFA,KAXE,KAYFL,OAZE,EAaFM,eAbE,EAcFC,iBAdE,EAeFrB,MAAQsB,EAfN,EAeMA,aAAcC,EAfpB,EAeoBA,YAAaC,EAfjC,EAeiCA,UAAWvB,EAf5C,EAe4CA,MAoBhD,OAHAwB,qBAAU,WACRrC,QAAQC,IAAI,cAAekC,KAC1B,CAACA,IAEF,kBAACJ,EAAD,CAAMb,UAAU,gBACd,6BACE,+BACE,wCACA,kBAAChB,EAAD,CACEM,MAAM,OACN8B,SAAU,SAAAC,GAAK,OAAMA,GAAQ,YAC7BC,YAAY,wBAIlB,6BACE,+BACE,yCACA,kBAACtC,EAAD,CACEM,MAAM,QACNgC,YAAY,aACZF,SAAQ,uCAAE,WAAOC,EAAOZ,GAAd,SAAAC,EAAA,yDACHW,EADG,yCAEC,qBAFD,UAKHE,EAAcC,IAAEC,KAAKJ,IALlB,yCAMC,uCAND,cASRvC,QAAQC,IAAR,0BAA+BsC,EAA/B,QATQ,mBAWD,GAXC,2CAAF,4DAmBd,6BACE,+BACE,0CACA,kBAACrC,EAAD,CACEM,MAAM,WACNgC,YAAY,2CAIlB,6BACE,+BACE,2CACA,kBAACtC,EAAD,CACEM,MAAM,UACNgC,YAAY,4BACZF,SAAU,SAAAC,GAAK,OAAMA,GAAQ,YAC7BpB,KAAK,eAOVN,EAAQ,gCAASA,GAAkB,KAEnCqB,EACC,GAEE,yBAAKhB,UAAU,YACb,4BAAQC,KAAK,SAASyB,UAAWR,GAC/B,kBAACS,EAAA,EAAD,CAAWC,KAAK,qBAQ9B,SAASL,EAAcjD,GAKrB,MADS,4JACCuD,KAAKC,OAAOxD,GAAOyD,e,8DCvJhB,qBAAO,IAAD,EACSC,oBAAS,GADlB,mBACZC,EADY,KACJC,EADI,KAEnB,OACE,yBAAKlC,UAAU,gBACb,kBAAC,IAAD,CAAMmC,SAAS,IACf,kBAACC,EAAA,EAAD,MACA,yBAAKpC,UAAU,gBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,iBAEXiC,EACE,4CAEA,sDAA2B,6BAA3B,qBAGN,yBAAKjC,UAAU,iBAEXiC,EAEE,qFAEE,6BAFF,6CAMA,uHAEE,6BAFF,4FAQJA,EAAS,kBAACN,EAAA,EAAD,CAAWC,KAAK,WAAWS,QAAS,WAC3CC,IAAQC,KAAK,eACP,kBAAC,EAAD,CAAMrC,YAAa,WACzBgC,GAAU,GACVM,YAAU,EAAG,QAIfP,EACE,oCACE,yBAAKjC,UAAU,UAAUyC,IAAKC,MAC9B,yBAAK1C,UAAU,WAAWyC,IAAKE,OAG/B,OAIV,kBAACC,EAAA,EAAD","file":"static/js/6.30d4f126.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Contact-graphic-left.025d1727.svg\";","module.exports = __webpack_public_path__ + \"static/media/Contact-graphic-right.1fbf30d3.svg\";","import axios from 'axios'\n\n// const sentEmail = (user, house, bookingDate) => {\nconst sentEmail = ({ name, email, linkedin, project }) => {\n  return axios.get('https://us-central1-ilabs3-5792b.cloudfunctions.net/sendEmail', {\n      params: {\n        name,\n        email,\n        linkedin,\n        project\n      }\n    })\n    .then(res => {\n      console.log('res is ', res)\n    })\n}\n\nexport default sentEmail","import React, { useEffect } from \"react\"\nimport _ from 'lodash'\nimport GoToArrow from 'components/GoToArrow'\n\nimport \"./style.sass\";\n\nimport { useForm, useField, splitFormProps } from \"react-form\";\nimport sendEmail from 'scripts/email.js'\n\nconst InputField = React.forwardRef((props, ref) => {\n  // Let's use splitFormProps to get form-specific props\n  const [field, fieldOptions, rest] = splitFormProps(props);\n\n  // Use the useField hook with a field and field options\n  // to access field state\n  const {\n    meta: { error, isTouched, isValidating, message },\n    getInputProps\n  } = useField(field, fieldOptions);\n\n  // Build the field\n  return (\n    <div className=\"input-wrap\">\n      {\n        rest.type === 'textarea' ?\n          <textarea {...getInputProps({ ref, ...rest })} />\n          :\n          <input {...getInputProps({ ref, ...rest })} />\n      }\n\n      {/*\n        Let's inline some validation and error information\n        for our field\n      */}\n\n      {isValidating ? (\n        <em className=\"info\">Validating...</em>\n      ) : isTouched && error ? (\n        <strong className=\"info\">{error}</strong>\n      ) : message ? (\n        <small className=\"info\">{message}</small>\n      ) : null}\n    </div>\n  );\n});\n\nexport default ({\n  onSubmitted = () => { }\n}) => {\n  const defaultValues = React.useMemo(\n    () => ({\n      name: '',\n      email: '',\n      linkedIn: '',\n      project: ''\n    }),\n    []\n  );\n  const {\n    Form,\n    values,\n    pushFieldValue,\n    removeFieldValue,\n    meta: { isSubmitting, isSubmitted, canSubmit, error }\n  } = useForm({\n    defaultValues,\n    // validate: values => {\n    //   if (values.name === \"tanner\" && values.age !== \"29\") {\n    //     return \"This is not tanner's correct age\";\n    //   }\n    //   return false;\n    // },\n    onSubmit: async (values, instance) => {\n      await sendEmail(values)\n      setTimeout(() => {\n        onSubmitted()\n      }, 500)\n    }\n  });\n\n  useEffect(() => {\n    console.log('isSubmitted', isSubmitted)\n  }, [isSubmitted])\n  return (\n    <Form className=\"contact-form\">\n      <div>\n        <label>\n          <span>Name *</span>\n          <InputField\n            field=\"name\"\n            validate={value => (!value ? \"Required\" : false)}\n            placeholder=\"What's your name?\"\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          <span>Email *</span>\n          <InputField\n            field=\"email\"\n            placeholder=\"Your email\"\n            validate={async (value, instance) => {\n              if (!value) {\n                return \"Email is required\";\n              }\n\n              if (!validateEmail(_.trim(value))) {\n                return \"Please enter a valid email addresss\";\n              }\n\n              console.log(`Checking email: ${value}...`);\n\n              return false\n\n              // We're going to mock that for now\n              // await new Promise(resolve => setTimeout(resolve, 2000));\n            }}\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          <span>Linkedin</span>\n          <InputField\n            field=\"linkedin\"\n            placeholder=\"Can you share your Linkedin profile?\"\n          />\n        </label>\n      </div>\n      <div>\n        <label>\n          <span>Project *</span>\n          <InputField\n            field=\"project\"\n            placeholder=\"Tell us about the project\"\n            validate={value => (!value ? \"Required\" : false)}\n            type=\"textarea\"\n          />\n        </label>\n      </div>\n\n      {/* {isSubmitted ? <em>Thanks for submitting!</em> : null} */}\n\n      {error ? <strong>{error}</strong> : null}\n\n      {isSubmitting ? (\n        \"\"\n      ) : (\n          <div className=\"btn-wrap\">\n            <button type=\"submit\" disabled={!canSubmit}>\n              <GoToArrow text=\"Send Message\" />\n            </button>\n          </div>\n        )}\n    </Form>\n  );\n}\n\nfunction validateEmail(email) {\n  //var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  // var re = /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n  // var re = \"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,64}\"\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n  // return re.test(email);\n}\n\n","import React, { useState } from 'react'\nimport Header from 'components/Header'\nimport Footer from 'components/Footer'\nimport Form from './Form'\nimport GoToArrow from 'components/GoToArrow'\nimport history from 'history.js'\nimport LeftBg from 'assets/imgs/contact/Contact-graphic-left.svg'\nimport RightBg from 'assets/imgs/contact/Contact-graphic-right.svg'\nimport { scrollTop } from 'utils'\nimport './style.sass'\nimport Logo from 'components/BrandLogo/index.js'\n\nexport default () => {\n  const [isSent, setIsSent] = useState(false)\n  return (\n    <div className=\"contact-page\">\n      <Logo isWhite={false}/>\n      <Header />\n      <div className=\"contact-wrap\">\n        <div className=\"contact-content\">\n          <div className=\"content-title\">\n            {\n              isSent ?\n                <p>Message sent!</p>\n                :\n                <p>Have a project in mind? <br />Let’s talk.</p>\n            }\n          </div>\n          <div className=\"contact-intro\">\n            {\n              isSent\n                ?\n                <p>\n                  We’ll follow up with you within the next 24 hours.\n                  <br />\n                  In the meantime, take a look at our work.\n                </p>\n                :\n                <p>\n                  We love to collaborate with enthusiastic teams, big or small to create something special.\n                  <br />\n                  We have a tried and tested process to take your ideas/ concepts and bring them to life.\n                </p>\n            }\n          </div>\n          {\n            isSent ? <GoToArrow text=\"Our Work\" onClick={() => {\n              history.push('/ourwork')\n            }} /> : <Form onSubmitted={() => {\n              setIsSent(true)\n              scrollTop(0, 500)\n            }} />\n          }\n          {\n            isSent ? (\n              <>\n                <img className=\"bg-left\" src={LeftBg} />\n                <img className=\"bg-right\" src={RightBg} />\n              </>\n            )\n              : null\n          }\n        </div>\n      </div>\n      <Footer />\n    </div>\n  )\n}"],"sourceRoot":""}