{"version":3,"sources":["components/TextAndLottieSection/index.js","views/CaseStudy/GS/TheChallenge.js"],"names":["title","intro","introHeight","list","style","withName","lottieSize","width","height","titleWidth","itemStyle","isWhite","withLottie","isPC","window","animationOptions","from","opacity","to","duration","delay","className","target","titleMargin","animations","minHeight","classNames","map","item","index","key","options","animationData","img","wrapHeight","fontSize","fontFamily","letterSpacing","name","text","Challenge","GSData","useState","setAnimationData","challengeCircleStyle","background","position","borderRadius","right","top","left","bottom","getData","a","data","default","useEffect","overflow","theChallenge","marginTop","marginLeft","transform"],"mappings":"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","file":"static/js/8.0c975e18.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\n\nimport AnimationPlayer, { LottieAnimation } from 'components/AnimationPlayer'\nimport CommonTitle from 'components/CommonTitle'\nimport classNames from 'classnames'\nimport './index.sass'\n\nconst lottieDuration = .8\n\nexport default ({\n  title = '',\n  intro = '',\n  introHeight = 0,\n  list = [],\n  style = {},\n  withName = true,\n  lottieSize = {\n    width: 86,\n    height: 86\n  },\n  titleWidth = 495,\n  itemStyle = {},\n  isWhite = false,\n  withLottie = true\n}) => {\n  const isPC = window.isPC\n  const animationOptions = {\n    title: [\n      {\n        from: {\n          opacity: 0,\n          height: 0\n        },\n        to: {\n          opacity: 1,\n          height: isPC ? '60px' : '0.38rem'\n        },\n        duration: .8\n      }\n    ],\n    intro: [\n      {\n        from: {\n          opacity: 0\n        },\n        to: {\n          opacity: 1\n        },\n        delay: .2\n      }\n    ]\n  }\n  return (\n    <div style={style}>\n      <div className=\"layout-1240 panel challenge-wrap\">\n        <div className=\"title-part\">\n          <AnimationPlayer\n            target={\n              <div className=\"title-wrap\">\n                <CommonTitle title={title} titleMargin={isPC ? '50px' : '0.01rem'} isWhite={isWhite} />\n              </div>\n            }\n            animations={animationOptions.title}\n            height={isPC ? '60px' : '0.38rem'}\n          />\n          <AnimationPlayer\n            target={\n              <div>\n                <CommonTitle intro={intro} width={titleWidth} isWhite={isWhite} minHeight='1.12rem'></CommonTitle>\n              </div>\n            }\n            animations={animationOptions.intro}\n            height={introHeight}\n          />\n        </div>\n        {\n          withLottie ?\n            (\n              <div className={classNames(\"content-wrap\", { 'is-white': isWhite })}>\n                {\n                  list.map((item, index) => {\n                    return (\n                      <div key={index} className=\"challenge-item\" style={itemStyle}>\n                        <div className=\"icon\" style={{ width: isPC ? '86px' : lottieSize.width }}>\n                          <LottieAnimation\n                            delay={isPC ? index * 0.2 * lottieDuration : 0}\n                            options={{\n                              animationData: item.img\n                            }}\n                            {...lottieSize}\n                            wrapHeight={lottieSize.height}\n                          />\n                        </div>\n                        {\n                          withName ?\n                            <AnimationPlayer\n                              target={\n                                (\n                                  <Fragment>\n                                    <div className=\"name\" style={isWhite ? { fontSize: 20, fontFamily: 'Gilroy-Bold', letterSpacing: 1 } : null}>{item.name}</div>\n                                    <div className=\"text\">{item.text}</div>\n                                  </Fragment>\n                                )\n                              }\n                              animations={[\n                                {\n                                  from: {\n                                    opacity: 0\n                                  },\n                                  to: {\n                                    opacity: 1\n                                  },\n                                  duration: lottieDuration,\n                                  delay: isPC ? index * 0.2 * lottieDuration : 0\n                                }\n                              ]}\n                              height={isPC ? '127px' : '1.27rem'}\n                            />\n                            : null\n                        }\n                      </div>\n                    )\n                  })\n                }\n              </div>\n            )\n            : null\n        }\n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport TextAndLottieSection from 'components/TextAndLottieSection'\nimport { LottieAnimation } from 'components/AnimationPlayer'\n\n\nconst Challenge = ({ GSData }) => {\n  const isPC = window.isPC\n  const [animationData, setAnimationData] = useState(null)\n\n  const challengeCircleStyle = (index) => {\n    const styles = [\n      {\n        width: 395,\n        height: 395,\n        right: '-150px',\n        top: '-100px'\n      },\n      {\n        width: 815,\n        height: 815,\n        left: '107px',\n        bottom: '-242px'\n      },\n      {\n        width: 476,\n        height: 476,\n        right: '151px',\n        bottom: '366px'\n      }\n    ]\n    return {\n      background: '#fff',\n      opacity: '0.08',\n      position: 'absolute',\n      borderRadius: '50%',\n      ...styles[index]\n    }\n  }\n\n  const getData = async () => {\n    const data = await import('assets/imgs/gs/3-challenge/5-devices')\n\n    setAnimationData(data.default)\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  if (!animationData) {\n    return <div style={{ height: '1300px', opacity: 0 }}></div>\n  }\n\n  return (\n    <div style={{\n      background: 'linear-gradient(75.35deg, #2D79D1 -30.2%, #52A2FF 118.87%)',\n      position: 'relative',\n      overflow: 'hidden',\n      minHeight: isPC ? 1615 : '19.2rem'\n    }}>\n      <div style={challengeCircleStyle(0)}></div>\n      <div style={challengeCircleStyle(1)}></div>\n      <div style={challengeCircleStyle(2)}></div>\n      <TextAndLottieSection\n        {...GSData.theChallenge}\n        itemStyle={{\n          width: isPC ? 275 : '85%',\n          marginTop: '0.45rem'\n        }}\n        titleWidth={600}\n        isWhite={true}\n        lottieSize={{\n          width: 169,\n          height: 169\n        }}\n      />\n      <div style={isPC ?\n        {\n          width: '1800px',\n          marginLeft: '50%',\n          transform: 'translateX(-50%)',\n          marginTop: '85px'\n        } : {\n          transform: 'scale(1.3)',\n        }\n      }>\n        <LottieAnimation\n          options={{\n            animationData,\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Challenge"],"sourceRoot":""}