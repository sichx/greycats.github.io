{"version":3,"sources":["components/TextAndAnimation/index.js","components/MobileCarousel/index.js","views/CaseStudy/GS/FirstLook.js"],"names":["AnimateTitle","id","hashCode","title","titleHeight","triggerRelativePosition","target","className","animations","from","height","to","AnimateText","intro","isSubTitle","classnames","opacity","top","delay","layoutType","subTitle","titleStyle","showLottie","showTitle","animateIcon","animateWidth","animateHeight","mobileAnimateWidth","mobileAnimateHeight","SubComponent","wrapMinHeight","animationStyle","mobileAnimationStyle","wrapStyle","isPC","window","style","minHeight","options","animationData","width","CarouselWrap","styled","div","list","key","background","centerSlidePercentage","infiniteLoop","selectedItem","showThumbs","showArrows","showStatus","transitionTime","centerMode","emulateTouch","map","item","index","PCImgs","GSData","position","right","firstGlance","left","MobileImgsWrap","MobileImgs","imgList","importanceImgs","src","FirstLook","padding","importance"],"mappings":"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","file":"static/js/20.f45b9fa0.chunk.js","sourcesContent":["/*\n * @Author: Gary\n * @Date: 2019-11-18 14:09:53\n * @Last Modified by: Gary\n * @Last Modified time: 2020-01-08 15:10:08\n * layoutType:\n * 1.left-text\n * 2.right-text\n * 3.up-text\n */\nimport React from 'react'\nimport AnimationPlayer, { LottieAnimation } from 'components/AnimationPlayer'\nimport classnames from 'classnames'\n\nimport { hashCode } from 'utils'\nimport './index.sass'\n\nconst AnimateTitle = ({\n  id = hashCode(),\n  title,\n  titleHeight,\n  triggerRelativePosition\n}) => (\n    <AnimationPlayer\n      id={id}\n      target={\n        <div className=\"title-wrap\">\n          <div className=\"title\">{title}</div>\n        </div>\n      }\n      animations={[\n        {\n          from: {\n            height: 0\n          },\n          to: {\n            height: titleHeight\n          }\n        }\n      ]}\n      triggerRelativePosition={triggerRelativePosition}\n    />\n  )\n\nconst AnimateText = ({\n  id = hashCode(),\n  intro,\n  isSubTitle = '',\n  triggerRelativePosition\n}) => (\n    <AnimationPlayer\n      id={id}\n      target={\n        <div className={classnames(\"intro-wrap\", { 'sub-title': isSubTitle })}>\n          {intro}\n        </div>\n      }\n      animations={[\n        {\n          from: {\n            opacity: 0,\n            top: '-60px'\n          },\n          to: {\n            opacity: 1,\n            top: 0\n          },\n          delay: .3\n        }\n      ]}\n      triggerRelativePosition={triggerRelativePosition}\n    />\n  )\n\n\nexport default ({\n  layoutType = 'left-text',\n  id = hashCode(),\n  title = '',\n  subTitle = '',\n  intro = '',\n  titleStyle = {},\n  titleHeight = 60,\n  showLottie = true,\n  showTitle = true,\n  animateIcon = null,\n  animateWidth = 'auto',\n  animateHeight = 'auto',\n  mobileAnimateWidth = 'auto',\n  mobileAnimateHeight = 'auto',\n  SubComponent = null,\n  wrapMinHeight = '750px',\n  animationStyle = {},\n  mobileAnimationStyle = {},\n  wrapStyle = {},\n  triggerRelativePosition\n}) => {\n  const isPC = window.isPC\n  return (\n    <div className={classnames(\"text-animation-wrap\", !isPC ? 'up-text panel' : layoutType, { 'layout-1240': layoutType !== 'up-text' })} style={{ minHeight: wrapMinHeight, ...wrapStyle }}>\n      <div className=\"title-part\" style={titleStyle}>\n        {\n          !showTitle ? null :\n            <AnimateTitle id={id + '0'} title={title} titleHeight={isPC ? titleHeight : (titleHeight / 60 * 0.38 + 'rem')} triggerRelativePosition={triggerRelativePosition} />\n        }\n        {\n          subTitle ?\n            <AnimateText id={id + '1'} intro={subTitle} isSubTitle={subTitle} triggerRelativePosition={triggerRelativePosition} />\n            : null\n        }\n        <AnimateText id={id + '1'} intro={intro} />\n        {\n          SubComponent ? <SubComponent /> : null\n        }\n      </div>\n      <div className=\"animation-part\" style={isPC ? animationStyle : mobileAnimationStyle}>\n        {\n          showLottie ?\n            <LottieAnimation\n              options={{\n                animationData: animateIcon,\n              }}\n              width={isPC ? animateWidth : mobileAnimateWidth}\n              height={isPC ? animateHeight : mobileAnimateHeight}\n              triggerRelativePosition={triggerRelativePosition}\n            />\n            : null\n        }\n      </div>\n    </div >\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\nimport { Carousel } from 'react-responsive-carousel'\n\nconst CarouselWrap = styled.div`\n  .carousel {\n    .slide {\n      background: transparent;\n      .slide-item {\n        display: flex;\n        justify-content: center;\n        &>img {\n          height: 100%;\n        }\n      }\n    }\n    .slider.animated {\n      transition: all .35s ease-out;\n    }\n\n    .control-dots {\n      bottom: -0.4rem;\n      margin: 0;\n      .dot {\n        width: 13px;\n        height: 13px;\n        background: #000;\n        box-shadow: none;\n      }\n    }\n  }\n\n  .carousel.carousel-slider {\n    overflow: unset\n  }\n\n  .carousel .slider-wrapper {\n    overflow: unset\n  }\n\n`\n\nexport default ({\n  list = [\n    <div key={1} style={{ width: '80vw', height: '3rem', background: '#aaa' }}></div>,\n    <div key={2} style={{ width: '80vw', height: '3rem', background: '#aaa' }}></div>\n  ],\n  centerSlidePercentage = 100,\n  infiniteLoop = false,\n  selectedItem = 0\n}) => {\n  return (\n    <CarouselWrap>\n      <Carousel\n        selectedItem={selectedItem}\n        showThumbs={false}\n        showArrows={false}\n        showStatus={false}\n        infiniteLoop={infiniteLoop}\n        centerSlidePercentage={centerSlidePercentage}\n        transitionTime={500}\n        centerMode\n        emulateTouch\n      >\n        {\n          list.map((item, index) => <div className=\"slide-item\" key={'slide' + index}>{item}</div>)\n        }\n      </Carousel>\n    </CarouselWrap>\n  )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport TextAndAnimation from 'components/TextAndAnimation'\nimport { LottieAnimation } from 'components/AnimationPlayer'\nimport MobileCarousel from 'components/MobileCarousel'\n\nconst PCImgs = ({GSData}) => (\n  <div className=\"layout-1240\" style={{\n    position: 'relative'\n  }}>\n    <div style={{\n      position: 'absolute',\n      right: '-100px',\n      top: '-390px'\n    }}>\n      <LottieAnimation\n        options={{\n          animationData: GSData.firstGlance[0],\n        }}\n        width={800}\n      />\n    </div>\n    <div style={{\n      position: 'absolute',\n      left: '-100px',\n      top: '-400px'\n    }}>\n      <LottieAnimation\n        options={{\n          animationData: GSData.firstGlance[1],\n        }}\n        width={800}\n      />\n    </div>\n  </div>\n)\n\nconst MobileImgsWrap = styled.div`\n  padding: 0 0.2rem;\n  margint-top: -0.3rem;\n  .carousel .control-dots {\n    bottom: 0.4rem;\n    .dot {\n      background: #fff;\n      opacity: 1\n      &.selected {\n        background: #4493EE;\n      }\n    }\n  }\n`\n\nconst MobileImgs = ({ GSData }) => {\n  const imgList = GSData.importanceImgs.map((item, index) => <img src={item} key={index} />)\n  return (\n    <MobileImgsWrap>\n      <MobileCarousel list={imgList} />\n    </MobileImgsWrap>\n  )\n}\n\nconst FirstLook = ({ GSData }) => {\n  const isPC = window.isPC\n  return (\n    <div style={{\n      background: 'linear-gradient(0deg, #E0EBF8, #E0EBF8)',\n      padding: isPC ? '220px 0 160px' : 0,\n      height: isPC ? '2710px' : '7.48rem'\n    }}>\n      <TextAndAnimation\n        layoutType='left-text'\n        {...GSData.importance}\n        titleStyle={{\n          width: '520px'\n        }}\n        wrapMinHeight={450}\n      />\n      {\n        isPC ? <PCImgs GSData={GSData} /> : <MobileImgs GSData={GSData} />\n      }\n    </div>\n  )\n}\n\nexport default FirstLook"],"sourceRoot":""}