{"version":3,"sources":["views/CaseStudy/GS/Questions.js"],"names":["isPC","window","RowAnimations","dataList","style","display","alignItems","map","d","index","key","options","animationData","triggerRelativePosition","marginTop","TextList","title","content","t","color","fontSize","fontWeight","marginBottom","width","GSData","questions","approachData","step1Data","step2Data","step3Data","className","minHeight","target","lineHeight","animations","from","opacity","to","top","delay","textTransform","flex","transform"],"mappings":"wHAAA,mCAQMA,EAAOC,OAAOD,KAEdE,EAAgB,SAAC,GAAuB,IAAD,IAApBC,gBAAoB,MAAT,GAAS,EAE3C,OACE,yBAAKC,MAAOJ,EAAO,CACjBK,QAAS,OACTC,WAAY,UACV,IAEAH,EAASI,KAAI,SAACC,EAAGC,GAAJ,OACX,kBAAC,IAAD,CACEC,IAAKD,EACLE,QAAS,CACPC,cAAeJ,GAEjBK,wBAA2Bb,GAAkB,IAAVS,EAE/B,GAF8C,CAChDK,UAAW,kBASnBC,EAAW,WAgBf,OAAO,6BAfM,CACX,CACEC,MAAO,OACPC,QAAS,wHAEX,CACED,MAAO,OACPC,QAAS,+HAEX,CACED,MAAO,UACPC,QAAS,mFAMJV,KAAI,SAACW,EAAGT,GACX,OAAO,yBAAKC,IAAKD,GACf,uBAAGL,MAAO,CACRe,MAAO,UACPC,SAAU,OACVC,WAAY,OACZC,aAAc,SACZJ,EAAEF,OACN,uBAAGZ,MAAO,CACRe,MAAO,UACPC,SAAU,OACVG,MAAOvB,EAAO,QAAU,OACxBsB,aAAc,SACZJ,EAAED,eAOD,sBAAsB,IAAD,IAAlBO,OAAkB,cAAT,GAAS,GAC+BC,UAAzDC,EAD0B,EAC1BA,aACFvB,EAAW,CAFiB,EACZwB,UADY,EACDC,UADC,EACUC,WAO5C,OACE,yBAAKC,UAAU,mCAAmC1B,MAAO,CAAE2B,UAAW/B,EAAO,SAAW,YACtF,kBAAC,IAAD,CACEgC,OACE,yBAAK5B,MAAO,CACVgB,SAAUpB,EAAO,OAAS,OAC1BiC,WAAY,EACZZ,WAAY,OACZF,MAAO,UACPG,aAActB,EAAO,QAAU,YALjC,iBAUFkC,WACE,CACE,CACEC,KAAM,CACJC,QAAS,GAEXC,GAAI,CACFD,QAAS,OAMnB,kBAAClC,EAAD,CAAeC,SAAUA,IACzB,yBAAKC,MAAO,CAAEC,QAASL,EAAO,OAAS,UACrC,yBAAKI,MAAO,CAAEmB,MAAOvB,EAAO,MAAQ,SAClC,kBAAC,IAAD,CACEa,wBAAyB,CACvByB,IAAK,UAEPC,MAAO,EACPP,OACE,yBAAK5B,MAAOJ,EAAO,CAAEc,UAAW,SAAY,IAC1C,uBAAGV,MAAO,CACRe,MAAO,UACPC,SAAU,OACVC,WAAY,OACZC,aAAc,OACdkB,cAAe,cALjB,qBAOA,kBAACzB,EAAD,OAGJmB,WACE,CACE,CACEC,KAAM,CACJC,QAAS,GAEXC,GAAI,CACFD,QAAS,QAOrB,yBAAKhC,MAAOJ,EAAO,CAAEyC,KAAM,GAAM,CAAEC,UAAW,aAAc5B,UAAW,WACrE,kBAAC,IAAD,CACEH,QAAS,CACPC,cAAec","file":"static/js/9.46a6ae2a.chunk.js","sourcesContent":["import React from 'react'\nimport AnimationPlayer, { LottieAnimation } from 'components/AnimationPlayer'\n\n// import approachData from 'assets/imgs/gs/5-questions/approach.json'\n// import step1Data from 'assets/imgs/gs/5-questions/1.json'\n// import step2Data from 'assets/imgs/gs/5-questions/2.json'\n// import step3Data from 'assets/imgs/gs/5-questions/3.json'\n\nconst isPC = window.isPC\n\nconst RowAnimations = ({ dataList = [] }) => {\n\n  return (\n    <div style={isPC ? {\n      display: 'flex',\n      alignItems: 'center'\n    } : {}}>\n      {\n        dataList.map((d, index) => (\n          <LottieAnimation\n            key={index}\n            options={{\n              animationData: d\n            }}\n            triggerRelativePosition={(!isPC && index !== 0) ? {\n              marginTop: '-0.8rem'\n            } : {}}\n          />\n        ))\n      }\n    </div>\n  )\n}\n\nconst TextList = () => {\n  const text = [\n    {\n      title: 'Plan',\n      content: 'We outlined how we believed users would derive value from the design. We then developed a plan to test our theories.'\n    },\n    {\n      title: 'Test',\n      content: 'Our user research team conducted structured user tests, observing how real users interacted with several design prototypes.'\n    },\n    {\n      title: 'Analyze',\n      content: 'Our cross functional team reviewed the results to fine tune future iterations.'\n    }\n  ]\n\n  return <div>\n    {\n      text.map((t, index) => {\n        return <div key={index}>\n          <p style={{\n            color: '#2C2C2C',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            marginBottom: '10px'\n          }}>{t.title}</p>\n          <p style={{\n            color: '#2C2C2C',\n            fontSize: '16px',\n            width: isPC ? '360px' : 'auto',\n            marginBottom: '40px'\n          }}>{t.content}</p>\n        </div>\n      })\n    }\n  </div>\n}\n\nexport default ({ GSData = {} }) => {\n  const { approachData, step1Data, step2Data, step3Data } = GSData.questions\n  const dataList = [\n    step1Data,\n    step2Data,\n    step3Data\n  ]\n\n  return (\n    <div className=\"layout-1240 panel challenge-wrap\" style={{ minHeight: isPC ? '1350px' : '16.2rem' }}>\n      <AnimationPlayer\n        target={\n          <div style={{\n            fontSize: isPC ? '44px' : '32px',\n            lineHeight: 1,\n            fontWeight: 'bold',\n            color: '#2C2C2C',\n            marginBottom: isPC ? '100px' : '0.54rem'\n          }}>\n            The Questions\n          </div>\n        }\n        animations={\n          [\n            {\n              from: {\n                opacity: 0\n              },\n              to: {\n                opacity: 1\n              }\n            }\n          ]\n        }\n      />\n      <RowAnimations dataList={dataList} />\n      <div style={{ display: isPC ? 'flex' : 'block' }}>\n        <div style={{ width: isPC ? '40%' : 'auto' }}>\n          <AnimationPlayer\n            triggerRelativePosition={{\n              top: '-120px'\n            }}\n            delay={1}\n            target={\n              <div style={isPC ? { marginTop: '123px' } : {}}>\n                <p style={{\n                  color: '#2C2C2C',\n                  fontSize: '16px',\n                  fontWeight: 'bold',\n                  marginBottom: '50px',\n                  textTransform: 'uppercase'\n                }}>Holistic approach</p>\n                <TextList />\n              </div>\n            }\n            animations={\n              [\n                {\n                  from: {\n                    opacity: 0\n                  },\n                  to: {\n                    opacity: 1\n                  }\n                }\n              ]\n            }\n          />\n        </div>\n        <div style={isPC ? { flex: 1 } : { transform: 'scale(1.2)', marginTop: '0.4rem' }}>\n          <LottieAnimation\n            options={{\n              animationData: approachData\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}"],"sourceRoot":""}