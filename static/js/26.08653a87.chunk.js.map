{"version":3,"sources":["views/OurWork/index.js"],"names":["isPC","window","titleData","title","titleSize","titleMargin","intro","wrapStyle","marginBottom","Title","target","style","minHeight","className","fontSize","color","position","top","lineHeight","padding","animations","from","opacity","to","data","fakeData","useState","listData","setListData","getLocationSearch","projectType","setProjectType","useEffect","history","listen","setTimeout","length","_","filter","item","type","isWhite","isFixed","showBg","height","left","width","backgroundColor","overflowX"],"mappings":"oPAaMA,EAAOC,OAAOD,KAEdE,EAAY,CAChBC,MAAO,8BACPC,UAAW,OACXC,YAAa,OACbC,MAAO,sCACPC,UAAW,CACTC,aAAcR,EAAO,OAAS,WA6E5BS,EAAQ,kBAAM,kBAAC,IAAD,CAClBC,OACE,yBAAKC,MAAO,CACVC,UAAWZ,EAAO,QAAU,UAE5B,yBAAKa,UAAU,eACb,wBAAIA,UAAU,OAAOF,MAAO,CAC1BG,SAAUd,EAAO,OAAS,OAC1Be,MAAO,OACPC,SAAU,WACVC,IAAK,QACLC,WAAY,EACZC,QAASnB,EAAO,EAAI,YANtB,cAaNoB,WACE,CACE,CACEC,KAAM,CACJC,QAAS,GAEXC,GAAI,CACFD,QAAS,QASJ,sBAA4B,IAAD,IAAxBE,YAAwB,MAAjBC,cAAiB,IACRC,mBAAS,IADD,mBACjCC,EADiC,KACvBC,EADuB,OAGFF,mBAASG,YAAkB,SAHzB,mBAGjCC,EAHiC,KAGpBC,EAHoB,KA6BxC,OAxBAC,qBAAU,WACRJ,EAAYJ,GAEZS,IAAQC,QAAO,WACbC,YAAW,WACTP,EAAY,IACZG,EAAeF,YAAkB,WAChC,SAEJ,IAEHG,qBAAU,WACHL,EAASS,QACZR,EAAYS,IAAEC,OAAOd,GAAM,SAAAe,GACzB,IAAMC,EAAOV,EACb,OAAIU,GAAiB,QAATA,EACHD,EAAKC,OAASA,EAEdD,QAIZ,CAACT,IAGF,6BACE,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQW,SAAS,EAAMC,SAAS,EAAOC,QAAQ,IAC/C,kBAAC,IAAD,CAAeC,OAAQ5C,EAAO,IAAM,KAEhCA,EACE,yBAAKW,MAAO,CACVK,SAAU,WACV6B,KAAM,EACN5B,IAAK,QACL2B,OAAQ,QACRE,MAAO,MACPC,gBAAiB,UAInB,MAGN,kBAACtC,EAAD,MACA,yBAAKI,UAAU,cAAcF,MAAOX,EAAO,CAAEQ,aAAc,IAAO,CAAEW,QAAS,sBAC3E,kBAAC,IAAgBjB,GAEfF,EACE,kBAAC,IAAD,CAAa2B,SAAUA,IAEvB,yBAAKhB,MAAO,CACVqC,UAAW,WAEX,kBAAC,IAAD,QAIR,kBAAC,IAAD","file":"static/js/26.08653a87.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { AnimateBanner } from 'components/AnimateBanner'\nimport AnimationPlayer from 'components/AnimationPlayer'\nimport ProjectList, { fakeData, MobileList } from 'components/ProjectList'\nimport history from 'history.js'\nimport { getLocationSearch } from 'utils'\nimport Footer from 'components/Footer'\nimport CommonTitle from 'components/CommonTitle'\nimport Header from 'components/Header'\nimport Logo from 'components/BrandLogo/index.js'\n\nimport _ from 'lodash'\n\nconst isPC = window.isPC\n\nconst titleData = {\n  title: 'A selection of case studies',\n  titleSize: '32px',\n  titleMargin: '15px',\n  intro: 'Explore some of our recent projects',\n  wrapStyle: {\n    marginBottom: isPC ? '88px' : '0.4rem'\n  }\n}\n\nconst NavBar = ({\n  NavList = [\n    {\n      name: 'All',\n      type: 'all'\n    },\n    {\n      name: 'Enterprise',\n      type: 'enterprise'\n    },\n    {\n      name: 'Apps',\n      type: 'apps'\n    },\n    {\n      name: 'Development',\n      type: 'development'\n    },\n    {\n      name: 'Marketing',\n      type: 'marketing'\n    }\n  ],\n  onNavChange = () => { }\n}) => {\n  const [activeItem, setActiveItem] = useState(getLocationSearch('type') || 'all')\n\n  useEffect(() => {\n    onNavChange(activeItem)\n  }, [activeItem])\n\n  return (\n    <div style={{\n      backgroundColor: '#fff',\n      marginTop: '-90px',\n      height: '100px',\n      width: '60%',\n      display: 'flex',\n      alignItems: 'flex-end',\n      paddingLeft: '18%'\n    }}>\n      {\n        NavList.map((nav, index) => {\n          const isActive = nav.type === activeItem\n\n          return (\n            <div\n              key={index}\n              style={{\n                cursor: 'pointer',\n                marginRight: '40px',\n                color: isActive ? '#2c2c2c' : 'unset',\n                fontWeight: isActive ? 'bold' : 'unset'\n              }}\n              onClick={() => {\n                setActiveItem(nav.type)\n              }}\n            >\n              {nav.name}\n              <div style={{\n                opacity: isActive ? 1 : 0,\n                height: '2px',\n                marginTop: '5px',\n                borderBottom: '2px solid #2c2c2c',\n              }}></div>\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nconst Title = () => <AnimationPlayer\n  target={\n    <div style={{\n      minHeight: isPC ? '600px' : '400px'\n    }}>\n      <div className=\"layout-1240\">\n        <h1 className=\"bold\" style={{\n          fontSize: isPC ? '96px' : '48px',\n          color: '#fff',\n          position: 'relative',\n          top: '200px',\n          lineHeight: 1,\n          padding: isPC ? 0 : '0.25rem'\n        }}>\n          Our work\n      </h1>\n      </div>\n    </div>\n  }\n  animations={\n    [\n      {\n        from: {\n          opacity: 0\n        },\n        to: {\n          opacity: 1\n        }\n      }\n    ]\n  }\n/>\n\n\n\nexport default ({ data = fakeData() }) => {\n  const [listData, setListData] = useState([])\n\n  const [projectType, setProjectType] = useState(getLocationSearch('type'))\n\n  useEffect(() => {\n    setListData(data)\n\n    history.listen(() => {\n      setTimeout(() => {\n        setListData([])\n        setProjectType(getLocationSearch('type'))\n      }, 50)\n    })\n  }, [])\n\n  useEffect(() => {\n    if (!listData.length) {\n      setListData(_.filter(data, item => {\n        const type = projectType\n        if (type && type !== 'all') {\n          return item.type === type\n        } else {\n          return item\n        }\n      }))\n    }\n  }, [projectType])\n\n  return (\n    <div>\n      <Logo />\n      <Header isWhite={true} isFixed={false} showBg={true}/>\n      <AnimateBanner height={isPC ? 600 : 400}>\n        {\n          isPC ?\n            <div style={{\n              position: 'absolute',\n              left: 0,\n              top: '500px',\n              height: '100px',\n              width: '58%',\n              backgroundColor: '#fff'\n            }}>\n            </div>\n            :\n            null\n        }\n      </AnimateBanner>\n      <Title />\n      <div className=\"layout-1240\" style={isPC ? { marginBottom: 50 } : { padding: '0.4rem  0.25rem 0' }}>\n        <CommonTitle {...titleData}></CommonTitle>\n        {\n          isPC ?\n            <ProjectList listData={listData} />\n            :\n            <div style={{\n              overflowX: \"hidden\"\n            }}>\n              <MobileList />\n            </div>\n        }\n      </div>\n      <Footer />\n    </div >\n  )\n}\n"],"sourceRoot":""}